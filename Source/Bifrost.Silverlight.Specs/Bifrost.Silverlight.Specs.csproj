<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{426E7FCA-9B5B-41DA-AF52-2A5976CEE677}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Bifrost.Silverlight.Specs</RootNamespace>
    <AssemblyName>Bifrost.Silverlight.Specs</AssemblyName>
    <TargetFrameworkIdentifier>Silverlight</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>
    <SilverlightVersion>$(TargetFrameworkVersion)</SilverlightVersion>
    <SilverlightApplication>false</SilverlightApplication>
    <ValidateXaml>true</ValidateXaml>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\..\..\Users\einari\Documents\Visual Studio 2010\Projects\BifrostSignalR_Silverlight\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Machine.Specifications, Version=0.5.3.0, Culture=neutral, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\Solutions\packages\Machine.Specifications.0.5.3.0\lib\Machine.Specifications.dll</HintPath>
    </Reference>
    <Reference Include="Moq">
      <HintPath>..\Solutions\packages\Moq.4.0.10827\lib\NET40\Moq.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework">
      <HintPath>..\Solutions\packages\NUnit.2.5.10.11092\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="nunit.mocks">
      <HintPath>..\Solutions\packages\NUnit.2.5.10.11092\lib\nunit.mocks.dll</HintPath>
    </Reference>
    <Reference Include="pnunit.framework">
      <HintPath>..\Solutions\packages\NUnit.2.5.10.11092\lib\pnunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Core">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Windows">
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Xml.Linq" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Xml">
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Commands\for_CommandBuilderExtensions\when_specifying_constructor_parameters.cs" />
    <Compile Include="Commands\for_CommandBuilderExtensions\KnownCommand.cs" />
    <Compile Include="Commands\for_CommandBuilderExtensions\when_specifying_type.cs" />
    <Compile Include="Commands\for_CommandBuilderExtensions\given\an_empty_command_builder.cs" />
    <Compile Include="Commands\for_CommandBuilderExtensions\when_specifying_name.cs" />
    <Compile Include="Commands\for_CommandBuilderExtensions\when_specifying_parameters.cs" />
    <Compile Include="Commands\for_CommandBuilderExtensions\when_specifying_parameters_with_callback.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_of_known_command_with_parameters_as_dynamic.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_of_known_command_with_parameters_as_dictionary.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_setting_type_and_name_is_specified.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_setting_type.cs" />
    <Compile Include="Commands\for_CommandBuilder\given\an_empty_command_builder_for_known_command_with_constructor_parameter.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_and_type_is_specified.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_of_command_with_constructor_and_parameters_is_null.cs" />
    <Compile Include="Commands\for_CommandBuilder\KnownCommandWithAmbiguousConstructors.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_creating_instance_for_icommand.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_creating_instance_for_command.cs" />
    <Compile Include="Commands\for_CommandBuilder\given\an_empty_command_builder_for_known_command.cs" />
    <Compile Include="Commands\for_CommandBuilder\KnownCommand.cs" />
    <Compile Include="Commands\for_CommandBuilder\KnownCommandWithConstructorParameter.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_calling_execute_on_command_from_builder.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_creating_instance_for_known_command.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_of_a_known_command.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_of_command_with_ambiguous_constructors.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_of_command_with_constructor_and_parameters_are_missing.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_of_command_with_constructor_parameters_set.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_without_any_parameters.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_with_name_and_default_parameters_as_dynamic.cs" />
    <Compile Include="Commands\for_CommandBuilder\given\an_empty_command_builder.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_and_parameters_are_from_an_anonymous_type.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_with_name.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_with_name_and_default_parameters_as_dictionary.cs" />
    <Compile Include="Commands\for_CommandBuilder\when_getting_an_instance_without_name_specified.cs" />
    <Compile Include="Commands\for_CommandFactory\KnownCommand.cs" />
    <Compile Include="Commands\for_CommandFactory\when_building_and_populating_all_in_a_target_and_one_command_is_set.cs" />
    <Compile Include="Commands\for_CommandFactory\when_building_and_populating_all_in_a_target_with_string_property.cs" />
    <Compile Include="Commands\for_CommandFactory\ViewModelWithStringProperty.cs" />
    <Compile Include="Commands\for_CommandFactory\when_building_and_populating_all_in_a_target_with_custom_conventions.cs" />
    <Compile Include="Commands\for_CommandFactory\given\a_command_factory.cs" />
    <Compile Include="Commands\for_CommandFactory\ViewModelWithCommandsOnly.cs" />
    <Compile Include="Commands\for_CommandFactory\when_building_and_populating_all_in_a_target.cs" />
    <Compile Include="Commands\for_CommandFactory\when_building_from_a_known_type.cs" />
    <Compile Include="Commands\for_CommandFactory\when_building_from_a_property.cs" />
    <Compile Include="Commands\for_CommandFactory\when_building_from_a_property_with_custom_conventions.cs" />
    <Compile Include="Commands\for_DefaultCommandBuildingConventions\when_trimming_command_name_with_command_prefix.cs" />
    <Compile Include="Commands\for_DefaultCommandBuildingConventions\when_trimming_command_name_with_command_suffix.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config" />
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Bifrost.Silverlight\Bifrost.Silverlight.csproj">
      <Project>{1426A0C9-0445-4E65-839B-1B3A1BAECDB7}</Project>
      <Name>Bifrost.Silverlight</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(MSBuildExtensionsPath32)\Microsoft\Silverlight\$(SilverlightVersion)\Microsoft.Silverlight.CSharp.targets" />
  <ProjectExtensions />
  <Import Project="$(SolutionDir)\.nuget\nuget.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>